## Example configuration file. This file will be overwritten
## everytime you perfomrs an install

# Classes to recognize
[CLASSES]
neutral:      0
anger:        1
contempt:     2
disgust:      3
fear:         4
happy:        5
sadness:      6
surprise:     7

[TRAINING]
# Folder containing the raw images (should contain a subfolder for each classes to recognize)
IMAGES:     training/images
# Folder containing the cropped faces (should contain a subfolder for each classes to recognize)
FACES:      training/faces
# Folder containing the features calculated for each face image.
# Should have a first layer of subfolder named as classes to recognize, and inside each 
# class subfolder should contains a folder for each face image that belongs to that class
FEATURES:   training/features

[VALIDATION]
# Folder containing the raw images (should contain a subfolder for each classes to recognize)
IMAGES:     validation/images
# Folder containing the cropped faces (should contain a subfolder for each classes to recognize)
FACES:      validation/faces
# Folder containing the features calculated for each face image.
# Should have a first layer of subfolder named as classes to recognize, and inside each 
# class subfolder should contains a folder for each face image that belongs to that class
FEATURES:   validation/features

[FOLDER]
# Folder containing the csv files of the features for training set and validation set (one file per classifier)
TRAIN:      trainfiles
# Folder containing the trained ada classifiers (auspiciously should be opencv .xml files)
CLASSIFIER: classifiers
# Folder containing the trained svm classifiers (auspiciously should be opencv .xml files)
CLASSIFIER_SVM: classifiers/svm

[FOLDER]
# Folder containing the csv files of the features for training set and validation set (one file per classifier)
TRAIN:      training
# Folder containing the trained classifiers (auspiciously should be opencv .xml files)
CLASSIFIER: classifiers
CLASSIFIER_ADA: classifiers/ada
CLASSIFIER_SVM: classifiers/svm

[SUFFIX]
# Suffix of the folder which contains Gabor filtered images
FILTERED_FOLDER:  _feats
# Suffix of the file containing features in csv format
FEATURE_FILE:     _feats.csv

[FACECROP]
TOOL:               ./facecrop_cli
FACE_DETECTOR_CFG:  ../resources/haarcascade_frontalface_default.xml
EYE_DETECTOR_CFG:   ../resources/haarcascade_eye.xml

[SIZE]
# Size of the images before features extraction
width:    32
height:   32

[GABOR]
TOOL:           ./gaborbank_cli
FILTER_FILE:    NA
FEAT_FNAME:     gabor.yml
NWIDTHS:        1
NLAMBDAS:       5
NTHETAS:        6

[TRAIN]
# Write samples features directly in the csv file prepared for training, this way is possible to use CvMLData.read_csv for 
# loading sample data. If "False" do not embed any feature in the csv file, instead specify the file path where to find 
# the feature matrix of the sample.
TOOL:           ./train_cli
ADA_CPU_USAGE:      0.5
ADA_FILTER_FNAME:   adaboost_featselection.dat
SVM_CPU_USAGE:      0.5
SVM_FILTER_FNAME:   svm_featselection.dat

[DETECTION]
TOOL:   ./emo_detector_cli

[GUI]
TOOL: ./emotimegui_cli
